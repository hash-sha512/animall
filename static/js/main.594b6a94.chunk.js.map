{"version":3,"sources":["components/DialogSelect.js","redux/actions/index.js","redux/reducers/index.js","redux/store.js","components/MyResponsivePie.js","components/RadioButton.js","App.js","reportWebVitals.js","index.js"],"names":["useStylesSecondary","makeStyles","theme","root","margin","spacing","width","useStyles","container","display","flexWrap","formControl","minWidth","DialogSelect","dispatch_redux","useDispatch","useReducer","state","action","type","payload","parseInt","recurring","Error","dispatch","classes","classesSecondary","React","useState","open","setOpen","handleClose","Button","onClick","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","className","style","flexDirection","FormControl","InputLabel","id","Select","labelId","value","timeframe","onChange","e","target","input","Input","MenuItem","TextField","label","category","FormControlLabel","control","Checkbox","checked","name","color","DialogActions","defaultState","dataDumpsReducer","actions","temp","push","store","createStore","connect","data","props","Fragment","scale","top","right","bottom","left","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextColor","radialLabelsLinkColor","sliceLabelsSkipAngle","sliceLabelsTextColor","defs","background","size","padding","stagger","rotation","lineWidth","fill","match","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","RadioButtonsGroup","setValue","displayChart","setDisplayChart","Container","maxWidth","height","border","component","marginLeft","RadioGroup","aria-label","event","Radio","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8WAwBMA,EAAqBC,aAAW,SAACC,GAAD,MAAY,CAChDC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,aAMPC,EAAYN,aAAW,SAACC,GAAD,MAAY,CACvCM,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,YAAa,CACXP,OAAQF,EAAMG,QAAQ,GACtBO,SAAU,SAKC,SAASC,IACtB,IAAMC,EAAiBC,cADc,EAIXC,sBA4B1B,SAAiBC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,YACH,OAAO,2BAAIF,GAAX,IAAkB,UAAaC,EAAOE,UACxC,IAAK,WACH,OAAO,2BAAIH,GAAX,IAAkB,SAAYC,EAAOE,UACvC,IAAK,QACH,OAAO,2BAAIH,GAAX,IAAkB,MAASI,SAASH,EAAOE,WAC7C,IAAK,YACH,OAAO,2BAAIH,GAAX,IAAkB,WAAcA,EAAMK,YACxC,IAAK,SACH,MAAO,CAAC,UAAc,GAAI,SAAa,GAAI,MAAU,EAAG,UAAa,IACvE,QACE,MAAM,IAAIC,SA1CK,CAAC,UAAY,GAAI,SAAW,GAAI,MAAQ,EAAG,WAAY,IAHvC,mBAI9BN,EAJ8B,KAIvBO,EAJuB,KAM/BC,EAAUlB,IACVmB,EAAmB1B,IAPY,EAQb2B,IAAMC,UAAS,GARF,mBAQ9BC,EAR8B,KAQxBC,EARwB,KAc/BC,EAAc,WAClBD,GAAQ,IAkCV,OACE,gCACE,cAACE,EAAA,EAAD,CAAQC,QAzCY,WACtBH,GAAQ,IAwCN,yBACA,eAACI,EAAA,EAAD,CAAQC,sBAAoB,EAACC,sBAAoB,EAACP,KAAMA,EAAMQ,QAASN,EAAvE,UACE,cAACO,EAAA,EAAD,4BACA,cAACC,EAAA,EAAD,UACE,uBAAMC,UAAWd,EAAiBvB,KAAMsC,MAAO,CAAChC,QAAQ,OAAQiC,cAAc,UAA9E,UACE,eAACC,EAAA,EAAD,CAAaH,UAAWf,EAAQd,YAAhC,UACE,cAACiC,EAAA,EAAD,CAAYC,GAAG,2BAAf,uBACA,eAACC,EAAA,EAAD,CACEC,QAAQ,2BACRF,GAAG,qBACHG,MAAO/B,EAAMgC,UACbC,SAAU,SAACC,GAAD,OAAO3B,EAAS,CAACL,KAAO,YAAaC,QAAU+B,EAAEC,OAAOJ,SAClEK,MAAO,cAACC,EAAA,EAAD,IALT,UAOE,cAACC,EAAA,EAAD,CAAUP,MAAO,QAAjB,mBACA,cAACO,EAAA,EAAD,CAAUP,MAAO,UAAjB,qBACA,cAACO,EAAA,EAAD,CAAUP,MAAO,SAAjB,0BAGJ,cAACQ,EAAA,EAAD,CAAWX,GAAG,iBAAiBK,SAAU,SAACC,GAAD,OAAO3B,EAAS,CAACL,KAAM,WAAYC,QAAU+B,EAAEC,OAAOJ,SAASS,MAAM,WAAWT,MAAO/B,EAAMyC,WACtI,cAACF,EAAA,EAAD,CAAWX,GAAG,iBAAiBK,SAAU,SAACC,GAAD,OAAO3B,EAAS,CAACL,KAAM,QAASC,QAAU+B,EAAEC,OAAOJ,SAASS,MAAM,UAAUT,MAAO/B,EAAM+B,QAClI,cAACW,EAAA,EAAD,CACEC,QACA,cAACC,EAAA,EAAD,CACEC,QAAS7C,EAAMK,UACf4B,SAAU,SAACC,GAAD,OAAO3B,EAAS,CAACL,KAAM,YAAaC,QAAU+B,EAAEC,OAAOJ,SACjEe,KAAK,YACLC,MAAM,YAGRP,MAAM,mBAIZ,eAACQ,EAAA,EAAD,WACE,cAACjC,EAAA,EAAD,CAAQC,QAASF,EAAaiC,MAAM,UAApC,oBAGA,cAAChC,EAAA,EAAD,CAAQC,QAvEK,SAACkB,GACpBrB,GAAQ,GACRhB,ECjEQ,CAAE,KAAQ,YAAaM,QDiEP,CAAC,UAAYH,EAAMgC,UACvC,SAAWhC,EAAMyC,SACjB,MAAQrC,SAASJ,EAAM+B,OACvB,UAAY/B,EAAMK,aACtBE,EAAS,CAACL,KAAO,YAiEoB6C,MAAM,UAArC,yB,wCEvIJE,EAAe,CAAC,MACpB,CACE,CACE,GAAM,UACN,MAAS,UACT,MAAS,IACT,MAAS,qBAEX,CACE,GAAM,UACN,MAAS,UACT,MAAS,IACT,MAAS,sBAEX,CACE,GAAM,UACN,MAAS,UACT,MAAS,IACT,MAAS,uBAGb,QAAY,CACZ,CACE,GAAM,SACN,MAAS,SACT,MAAS,IACT,MAAS,uBAGX,OAAW,CACX,CACE,GAAM,SACN,MAAS,SACT,MAAS,IACT,MAAS,wBAoBEC,EAbU,WAAoC,IAAnClD,EAAkC,uDAA1BiD,EAAcE,EAAY,uCACxD,OAAOA,EAAQjD,MACX,IAAK,YAEH,IAAIkD,EAAOpD,EAEX,OADAoD,EAAKD,EAAQhD,QAAQ6B,WAAWqB,KAAK,CAAC,GAAOF,EAAQhD,QAAQsC,SAAU,MAAUU,EAAQhD,QAAQsC,SAAU,MAAQrC,SAAS+C,EAAQhD,QAAQ4B,OAAQ,MAAS,sBACtJ,eAAIqB,GACb,QACI,OAAOpD,IC9CNsD,EAAQC,YAAYL,GCmJlBM,eALS,SAACxD,GAAD,MAAY,CAChCyD,KAAMzD,KAIKwD,EAjIS,SAACE,GAOrB,OACA,cAAC,IAAMC,SAAP,UACI,cAAC,IAAD,CACAF,KAAMC,EAAMD,KAAKC,EAAME,OAEvBzE,OAAQ,CAAE0E,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChDC,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,OAAQ,CAAEC,OAAQ,QAClBC,YAAa,EACbC,YAAa,CAAEC,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,MACvDC,sBAAuB,GACvBC,sBAAsB,UACtBC,sBAAuB,CAAEJ,KAAM,SAC/BK,qBAAsB,GACtBC,qBAAqB,UACrBC,KAAM,CACF,CACInD,GAAI,OACJ1B,KAAM,cACN8E,WAAY,UACZjC,MAAO,2BACPkC,KAAM,EACNC,QAAS,EACTC,SAAS,GAEb,CACIvD,GAAI,QACJ1B,KAAM,eACN8E,WAAY,UACZjC,MAAO,2BACPqC,UAAW,GACXC,UAAW,EACXjG,QAAS,KAGjBkG,KAAM,CACF,CACIC,MAAO,CACH3D,GAAI,QAERA,GAAI,QAER,CACI2D,MAAO,CACH3D,GAAI,KAERA,GAAI,QAER,CACI2D,MAAO,CACH3D,GAAI,MAERA,GAAI,QAER,CACI2D,MAAO,CACH3D,GAAI,UAERA,GAAI,QAER,CACI2D,MAAO,CACH3D,GAAI,SAERA,GAAI,SAER,CACI2D,MAAO,CACH3D,GAAI,QAERA,GAAI,SAER,CACI2D,MAAO,CACH3D,GAAI,UAERA,GAAI,SAER,CACI2D,MAAO,CACH3D,GAAI,cAERA,GAAI,UAGZ4D,QAAS,CACL,CACIC,OAAQ,SACRC,UAAW,MACXC,SAAS,EACTC,WAAY,EACZC,WAAY,GACZC,aAAc,EACdC,UAAW,IACXC,WAAY,GACZC,cAAe,OACfC,cAAe,gBACfC,YAAa,EACbC,WAAY,GACZC,YAAa,SACbC,QAAS,CACL,CACIC,GAAI,QACJ/E,MAAO,CACHyE,cAAe,mB,SC1H5B,SAASO,IAAoB,MAGd9F,IAAMC,SAAS,SAHD,mBAGjCoB,EAHiC,KAG1B0E,EAH0B,OAMA/F,IAAMC,UAAS,GANf,mBAMjC+F,EANiC,KAMnBC,EANmB,KAYxC,OACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACA,gCACA,cAAC9F,EAAA,EAAD,CAAQS,MAAO,GAAIR,QAAS,kBAAI2F,GAAiBD,IAAjD,wBACCA,GAAgB,qBAAKlF,MAAO,CAAChC,QAAQ,OAASsH,OAAO,OAAQC,OAAO,mBAApD,SACG,qCACE,cAACrF,EAAA,EAAD,CAAasF,UAAU,WAAWxF,MAAO,CAACyF,WAAW,OAArD,SACE,eAACC,EAAA,EAAD,CAAYC,aAAW,QAAQrE,KAAK,QAAQf,MAAOA,EAAOE,SAX/D,SAACmF,GACpBX,EAASW,EAAMjF,OAAOJ,QAUE,UACE,cAACW,EAAA,EAAD,CAAkBX,MAAM,QAAQY,QAAS,cAAC0E,EAAA,EAAD,CAAOtE,MAAM,YAAaP,MAAM,UACzE,cAACE,EAAA,EAAD,CAAkBX,MAAM,UAAUY,QAAS,cAAC0E,EAAA,EAAD,CAAOtE,MAAM,YAAaP,MAAM,YAC3E,cAACE,EAAA,EAAD,CAAkBX,MAAM,SAASY,QAAS,cAAC0E,EAAA,EAAD,CAAOtE,MAAM,YAAaP,MAAM,gBAGhF,cAAC,EAAD,CAAiBoB,MAAO7B,EAAOP,MAAO,eCpBjD8F,MAXf,WACE,OACE,sBAAK/F,UAAU,MAAf,UACI,cAAC3B,EAAD,IACA,cAAC,EAAD,QCEO2H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU5E,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGF6E,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.594b6a94.chunk.js","sourcesContent":["import React, {useState, useReducer} from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport {useDispatch} from 'react-redux';\nimport newEntry from '../redux/actions';\n\n\n\nconst useStylesSecondary = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\n\nexport default function DialogSelect() {\n  const dispatch_redux = useDispatch();\n\n  const initialState = {'timeframe':'', 'category':'', 'value':0, 'recurring':false}\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const classes = useStyles();\n  const classesSecondary = useStylesSecondary();\n  const [open, setOpen] = React.useState(false);\n  \n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = (e) => {\n    setOpen(false)\n    dispatch_redux(newEntry({'timeframe':state.timeframe, \n        'category':state.category,\n        'value':parseInt(state.value),\n        'recurring':state.recurring}));\n    dispatch({type : 'SUBMIT'})\n    //let temp = JSON.parse(localStorage.getItem('datadumps'))\n    //temp[timeframe].push({'id':'', 'label':`${category}`, 'value':`${ruppee}` })\n    //localStorage.setItem('datadumps', JSON.stringify(temp))\n  }\n\n  //React.useEffect(()=> )\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case 'TIMEFRAME':\n        return {...state, 'timeframe': action.payload};\n      case 'CATEGORY':\n        return {...state, 'category': action.payload};\n      case 'VALUE':\n        return {...state, 'value': parseInt(action.payload)};\n      case 'RECURRING':\n        return {...state, 'recurring': !state.recurring};\n      case 'SUBMIT':\n        return {'timeframe' : '', 'category' : '', 'value' : 0, 'recurring': ''}\n      default:\n        throw new Error();\n    }\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClickOpen}>Add Expense</Button>\n      <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n        <DialogTitle>Fill the form</DialogTitle>\n        <DialogContent>\n          <form className={classesSecondary.root} style={{display:'flex', flexDirection:'column'}}>\n            <FormControl className={classes.formControl} >\n              <InputLabel id=\"demo-dialog-select-label\">Timeframe</InputLabel>\n              <Select\n                labelId=\"demo-dialog-select-label\"\n                id=\"demo-dialog-select\"\n                value={state.timeframe}\n                onChange={(e) => dispatch({type : 'TIMEFRAME', payload : e.target.value })}\n                input={<Input />}\n              >\n                <MenuItem value={'daily'}>Daily</MenuItem>\n                <MenuItem value={'monthly'}>Monthly</MenuItem>\n                <MenuItem value={'yearly'}>Yearly</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField id=\"standard-basic\" onChange={(e) => dispatch({type: 'CATEGORY', payload : e.target.value})} label=\"Category\" value={state.category} />\n            <TextField id=\"standard-basic\" onChange={(e) => dispatch({type: 'VALUE', payload : e.target.value})} label=\"Expense\" value={state.value} />\n            <FormControlLabel \n              control={\n              <Checkbox\n                checked={state.recurring}\n                onChange={(e) => dispatch({type: 'RECURRING', payload : e.target.value})}\n                name=\"recurring\"\n                color=\"primary\"\n              />\n                }\n              label=\"Recurring\"\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Ok\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","export default function newEntry(payload) {\n    return ({ 'type': 'NEW_ENTRY', payload: payload });\n}","const defaultState = {\"daily\" : \n  [ \n    {\n      \"id\": \"filler1\",\n      \"label\": \"filler1\",\n      \"value\": 522,\n      \"color\": \"hsl(15, 70%, 50%)\"\n    },\n    {\n      \"id\": \"filler2\",\n      \"label\": \"filler2\",\n      \"value\": 129,\n      \"color\": \"hsl(269, 70%, 50%)\"\n    },\n    {\n      \"id\": \"filler3\",\n      \"label\": \"filler3\",\n      \"value\": 138,\n      \"color\": \"hsl(125, 70%, 50%)\"\n    },\n  ],\n  'monthly' : [\n  {\n    \"id\": \"filler\",\n    \"label\": \"filler\",\n    \"value\": 328,\n    \"color\": \"hsl(100, 70%, 50%)\"\n  },\n  ],\n  \"yearly\" : [\n  {\n    \"id\": \"filler\",\n    \"label\": \"filler\",\n    \"value\": 259,\n    \"color\": \"hsl(209, 70%, 50%)\"\n  }\n  ]\n}\n\n\n\nconst dataDumpsReducer = (state = defaultState, actions) => {\n    switch(actions.type){\n        case 'NEW_ENTRY' :\n           //return {{...state['daily']} \n          let temp = state\n          temp[actions.payload.timeframe].push({'id' : actions.payload.category, 'label' : actions.payload.category, 'value':parseInt(actions.payload.value), 'color': 'hsl(40, 70%, 50%)'})\n          return {...temp}\n        default :\n            return state;\n        }\n    }\n\n\nexport default dataDumpsReducer;","import {createStore} from 'redux';\nimport dataDumpsReducer from './reducers'\n\nexport const store = createStore(dataDumpsReducer);","import React from 'react'\nimport { ResponsivePie } from '@nivo/pie'\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n\nimport Button from '@material-ui/core/Button';\n\n//import { useSelector } from \"react-redux\";\n//import dataDumpsReducer from \"../redux/reducers\"\n//import Datadumps from './Datadumps'\n\nimport {connect} from 'react-redux'\nimport {store} from '../redux/store';\n\n\n//let data = JSON.parse(localStorage.getItem('datadumps'))\n\n\nconst MyResponsivePie = (props/*{ /* data - see data tab , scale}*/) => {\n    //const data = useSelector(state => state)\n    //const data = store.getData();\n\n    //const [data, setData] = React.useState(store.getState())\n    //store.subscribe(()=>{setData(store.getState())}) not sure\n    \n    return(\n    <React.Fragment>\n        <ResponsivePie\n        data={props.data[props.scale]}\n        //data={data[scale]}\n        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n        innerRadius={0.5}\n        padAngle={0.7}\n        cornerRadius={3}\n        colors={{ scheme: 'nivo' }}\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n        radialLabelsSkipAngle={10}\n        radialLabelsTextColor=\"#333333\"\n        radialLabelsLinkColor={{ from: 'color' }}\n        sliceLabelsSkipAngle={10}\n        sliceLabelsTextColor=\"#333333\"\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: 'rgba(255, 255, 255, 0.3)',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'ruby'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'c'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'go'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'python'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'scala'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'lisp'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'elixir'\n                },\n                id: 'lines'\n            },\n            {\n                match: {\n                    id: 'javascript'\n                },\n                id: 'lines'\n            }\n        ]}\n        legends={[\n            {\n                anchor: 'bottom',\n                direction: 'row',\n                justify: false,\n                translateX: 0,\n                translateY: 56,\n                itemsSpacing: 0,\n                itemWidth: 100,\n                itemHeight: 18,\n                itemTextColor: '#999',\n                itemDirection: 'left-to-right',\n                itemOpacity: 1,\n                symbolSize: 18,\n                symbolShape: 'circle',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#000'\n                        }\n                    }\n                ]\n            }\n        ]}\n    /> \n    </React.Fragment>\n)\n}\n\nconst mapStateToProps = (state) => ({\n    data: state\n  })\n\n\nexport default connect(mapStateToProps)(MyResponsivePie);\n\n//export default MyResponsivePie;","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n\nimport MyResponsivePie from './MyResponsivePie.js' ;\n\nimport Container from '@material-ui/core/Container';\n\n\nexport default function RadioButtonsGroup() {\n    //state for graph's timeframe - defaults to daily\n    //passed as prop to the graph component - MyResponsivePie\n    const [value, setValue] = React.useState('daily');\n\n    //state - display/hide chart/GUI\n    const [displayChart, setDisplayChart] = React.useState(false); \n\n    const handleChange = (event) => {\n      setValue(event.target.value);\n    };\n  \n    return (\n      <Container maxWidth=\"sm\" > \n      <div >\n      <Button style={{}} onClick={()=>setDisplayChart(!displayChart)}>GUI Toggle</Button>\n      {displayChart && <div style={{display:'flex',  height:'60vh', border:'3px solid black'}}>\n                          <>\n                            <FormControl component=\"fieldset\" style={{marginLeft:'6px'}}>\n                              <RadioGroup aria-label=\"scale\" name=\"scale\" value={value} onChange={handleChange}>\n                                <FormControlLabel value=\"daily\" control={<Radio color=\"primary\"/>} label=\"Daily\" />\n                                <FormControlLabel value=\"monthly\" control={<Radio color=\"primary\"/>} label=\"Monthly\" />\n                                <FormControlLabel value=\"yearly\" control={<Radio color=\"primary\"/>} label=\"Yearly\" />\n                              </RadioGroup>\n                            </FormControl>\n                          <MyResponsivePie scale={value} style={{}} /> \n                          </>\n                        </div>\n      }\n      </div>\n      </Container>\n    );\n  }","import './App.css';\nimport DialogSelect from './components/DialogSelect';\nimport RadioButton from './components/RadioButton';\nimport React from 'react';\n\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n        <DialogSelect />\n        <RadioButton />\n    </div>\n\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {store} from './redux/store';\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}> \n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}